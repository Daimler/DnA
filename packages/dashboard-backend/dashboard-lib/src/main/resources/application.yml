spring:
  application:
    name: dna-dashboard-service
  flyway:
    enabled: ${FLYWAY_ENABLED:true}
    baseline-on-migrate: ${FLYWAY_BASELINE_ON_MIGRATE:true}
    baselineVersion: ${FLYWAY_BASELINEVERSION:0}
    schemas: ${FLYWAY_SCHEMA:public}
    
  jpa:
    database: POSTGRESQL
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false
    hibernate:
      ddl-auto: none

  datasource:
    platform: postgres
    url: ${API_DB_URL:jdbc:postgresql://localhost:5432/dashboard}
    username: ${API_DB_USER:admin}
    password: ${API_DB_PASS:admin}
    driverClassName: org.postgresql.Driver
      
dna:
  uri: ${DNA_URI:xxxx}
  dnaAuthEnable: ${DNA_AUTH_ENABLE:false}        
      
jwt:
  secret:
    key: ${JWT_SECRET_KEY:XXXX}
      
graphql:
  servlet:
    mapping: /api/minified
    enabled: true
    corsEnabled: true

server:
  port: 7173
  servlet:
    context-path: /dashboards

#Cors Filter origin Domains  
allowedCorsOriginPatternUrl: ${CORS_ORIGIN_URL:http://*}

swagger.headers.authorization.token: ${SWAGGER_HEADER_AUTH:XXXXXX}
management.endpoints.web.exposure.include: loggers,health
management.endpoint.loggers.enabled: true
management.endpoint.health.probes.enabled: true
management.endpoint.health.show-details: always

logging:
  service:
    environment: ${LOGGING_ENVIRONMENT:DEV}
    path: ${LOGGING_PATH:/var/log}
  level:
    com:
      daimler:
        data:
          application: INFO
    org.springframework.boot.autoconfigure.logging: INFO
    org:
      springframework:
        web:
          client:
            RestTemplate: INFO
      hibernate:
        type:
          descriptor:
            sql: ERROR
      graphql:
        servlet: ERROR
