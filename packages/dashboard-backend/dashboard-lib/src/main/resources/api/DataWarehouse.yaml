# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : datawarehouse.yaml
#  **
#  ** Module     : core
#  **

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  PRINCKU
#
#  Bug Number         :
#  Changed By         :
#  Change Description :
#  Change On          :
#  Search String      :
#
swagger: "2.0"
info:
  version: "1.0.0"
  title: "core dataWarehouse Service"
host: "localhost:7171"
basePath: "/api/1.0"
consumes:
  - "application/json"
produces:
  - "application/json"
tags:
  - name: "datawarehouses"
    description: "This service is used for dataWarehouse maintenance."

schemes:
  - "https"

paths:
  # path to create a new dataWarehouse
  #
  #  supprorted http methods GET
  #
  # path example ../datawarehouses

  /datawarehouses:
    get:
      tags:
        - "datawarehouses"
      summary: "Get all available dataWarehouse."
      description: "Get all dataWarehouse. This endpoints will be used to get all valid available dataWarehouse records."
      operationId: "getAll"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/DataWarehouseCollection"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
  
    post:
      tags:
        - "datawarehouses"
      summary: "Add a new dataWarehouse."
      description: "Adds a new non existing dataWarehouse."
      operationId: "create"
      parameters:
        - name: "dataWarehouseRequestVO"
          in: "body"
          description: "Request body that contains data required for creating a new dataWarehouse"
          required: true
          schema:
            $ref: "#/definitions/DataWarehouseRequestVO" 
      responses:
        200:
          description: "Returns message of succes"
          schema:
            $ref: "#/definitions/DataWarehouseResponseVO"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"      
    
    put:
      tags:
        - "datawarehouses"
      summary: "Update existing dataWarehouse."
      description: "Update an existing dataWarehouse."
      operationId: "update"
      parameters:
        - name: "dataWarehouseRequestVO"
          in: "body"
          description: "Request Body that contains data required for creating a new dataWarehouse"
          required: true
          schema:
            $ref: "#/definitions/DataWarehouseRequestVO"    
      responses:
        200:
          description: "Returns message of succes"
          schema:
            $ref: "#/definitions/DataWarehouseResponseVO"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  # Fetch dataWarehouse by id
  #
  #  Supported http methods GET
  #
  # path example ../datawarehouses
  
  /datawarehouses/{id}:
    get:
      tags:
        - "datawarehouses"
      summary: "Get dataWarehouse for a given id."
      description: "Get dataWarehouse for a given identifier. This endpoints will be used to get a dataWarehouse for a given identifier."
      operationId: "getById"
      parameters:
        - name: "id"
          in: "path"
          description: "dataWarehouse id to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/DataWarehouseInUseVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
    delete:
      tags:
        - "datawarehouses"
      summary: "Delete dataWarehouse for a given Id."
      description: "Delete dataWarehouse for a given identifier."
      operationId: "delete"
      parameters:
        - name: "id"
          in: "path"
          description: "DataWarehouse ID to be deleted"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"


definitions:
  DataWarehouseRequestVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/DataWarehouseInUseVO"
        
  DataWarehouseResponseVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/DataWarehouseInUseVO"
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
          
  DataWarehouseCollection:
    description: "Collection of DataWarehouses."
    type: object
    properties:
      records:
        type: array
        items:
          $ref: "#/definitions/DataWarehouseInUseVO"
          
  DataWarehouseInUseVO:
    type: object
    properties: 
      id:
        type: string        
      dataWarehouse:
        type: string
        description: ""
      commonFunctions: 
        type: array
        items:
          type: string
      specificFunctions:
        type: array
        items:
          type: string
      queries:
        type: array
        items:
          type: string
      dataSources:
        type: array
        items:
          type: string
      connectionTypes:
        type: array
        items:
          type: string 
    required:
      - dataWarehouse
