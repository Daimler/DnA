type Query {
    reports(published: Boolean, status: String,
    searchTerm: String, tags: String, offset: Int, limit: Int, sortBy: String,
    sortOrder: String, division: String, department: String, processOwner: String, art: String): ReportCollection!
    report(string: ID):ReportVO
}

scalar ISODate

type ReportCollection{
   totalCount: Int,
   records: [ReportVO]
}

type ReportVO {
	id: ID!,
	reportId: String,
    productName: String,
    createdDate: ISODate,
    lastModifiedDate: ISODate,
    closeDate: ISODate,
    createdBy:CreatedByVO,
    publish: Boolean,
    description: DescriptionVO,
    customer: CustomerVO,
    kpis: [KPIVO],
    dataAndFunctions: DataAndFunctionVO,
    members: MemberVO
}

type CreatedByVO{
    id:String!,
    firstName: String,
    lastName: String,
    department: String,
    email: String,
    mobileNumber: String
}

type DescriptionVO{
    reportLink: String,
	productDescription: String,
	reportType: String,
	piiData: String,
	status: String,
	integratedPortal: String,
	frontendTechnologies: [String],
	tags:[String],
	agileReleaseTrain: String,
	division : DivisionVO,
	department: String
}

type DivisionVO{
    id: ID!,
    name: String!
    subdivision: SubdivisionVO,
}
type SubdivisionVO{
    id: ID!,
    name: String
}

type CustomerVO{
	internalCustomers: [InternalCustomerVO],
	externalCustomers: [ExternalCustomerVO]
}

type InternalCustomerVO{
	name: TeamMemberVO,
	customerRelation: String,
	level: String,
	division: DivisionVO,
	department: String,
	legalEntity: String,
	accessToSensibleData: String,
	comment: String,
	processOwner: TeamMemberVO
}

type ExternalCustomerVO{
	name: TeamMemberVO,
	customerRelation: String,
	companyName: String,
	comment: String
}

type KPIVO{
	name: String,
	reportingCause: String,
	description: String,
	kpiLink: String
}

type DataAndFunctionVO{
    dataWarehouseInUse: [DataWarehouseVO],
    singleDataSources: [SingleDataSourceVO]
}

type DataWarehouseVO{
	dataWarehouse: String,
	commonFunctions: [String],
	dataClassification: String,
	connectionType: String
}

type SingleDataSourceVO{
	dataSources: [DataSourceVO],
	dataClassification: String,
	connectionType: String
}

type DataSourceVO{
	dataSource: String,
	weightage: Int
}

type MemberVO{
	reportOwners: [TeamMemberVO],
    reportAdmins: [TeamMemberVO]
}

type TeamMemberVO{
    shortId: String,
    userType: UserTypeEnum,
    firstName: String,
    lastName: String,
    department: String,
    email: String,
    mobileNumber: String,
    company: String,
    teamMemberPosition: String
}

enum UserTypeEnum{
    INTERNAL,
    EXTERNAL
}