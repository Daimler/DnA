# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
# 
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : CorporateDataCatalog.yaml
#  **
#  ** Module     : core
#  ** 

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  BEALURI
#
#  Bug Number         :  
#  Changed By         :  
#  Change Description :  
#  Change On          :  
#  Search String      :  
#  
#  -------------------------------------------------------------------------------------------------------
  

swagger: "2.0"
info:
 version: "1.0.0"
 title: "core CorporateDataCatalog Service"
host: "localhost:7184"
basePath: "/api/1.0"
consumes:
 - "application/json"
produces:
 - "application/json"
tags:
 - name: "corporateDataCatalogs"
   description: "This service is used to maintain corporateDataCatalogs used in dataproducts."

schemes:
- "https"

paths:

# path to fetch all valid corporateDataCatalogs or by intent
#
#  supprorted http methods GET, POST and DELETE 
#
# path example ../corporateDataCatalogs

 /corporateDataCatalogs:
  
  get:
   tags:
    - "corporateDataCatalogs"
   summary: "Get all available corporateDataCatalogs."
   description:  "Get all corporateDataCatalogs. This endpoints will be used to Get all valid available corporateDataCatalogs maintenance records."
   operationId: "getAll"
   parameters:
        - name: sortBy
          in: query
          description: Sort corporateDataCatalogs by a given variable like name
          required: false
          type: string
          enum: [name]
        - name: sortOrder
          in: query
          description: Sort corporateDataCatalogs based on the given order, example asc,desc
          required: false
          type: string   
          enum: [asc,desc]
        - name: offset
          in: query
          description: page number from which listing of corporateDataCatalogs should start. Offset. Example 2
          required: false
          type: integer  
        - name: limit
          in: query
          description: size to limit the number of corporateDataCatalogs, Example 10
          required: false
          type: integer
      
   responses:
    201:
     description: "Returns message of succes or failure"
     schema:
       $ref: "#/definitions/CorporateDataCatalogCollection"
    204:
      description: "Fetch complete, no content found."
    400:
     description: "Bad request."
    401:
     description: "Request does not have sufficient credentials."
    403:
     description: "Request is not authorized."
    405:
     description: "Method not allowed"
    500:
     description: "Internal error"

# path to get existing corporateDataCatalogs
#
#  supported http methods GET
#
# path examples----


 /corporateDataCatalogs/{id}:
  get:
    tags:
    - "corporateDataCatalogs"
    summary: "get the corporateDataCatalogs  by given ID."
    description:  "get the corporateDataCatalogs  by given ID"
    operationId: "getByID"
    parameters:
      - name: "id"
        in: "path"
        description: "Id of the corporateDataCatalog"
        required: true
        type: "string"
    responses:
      200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/CorporateDataCatalogVO"
      400:
       description: "Bad request"
      401:
       description: "Request does not have sufficient credentials."
      403:
       description: "Request is not authorized."
      404:
       description: "Invalid id, record not found."
      500:
       description: "Internal error"
     
definitions:
 CorporateDataCatalogVO:
    type: object
    properties:  
      id:
        type: string
      name:
        type: string
        
 CorporateDataCatalogCollection: 
  description: "Collection of Carlafunctions."
  type: object
  properties: 
    data: 
      type: array
      items: 
        $ref: "#/definitions/CorporateDataCatalogVO"
    totalCount:
      type: integer
      description: "Total records from the database"
 