type DataProductCollection {
    totalCount: Int,
    records: [DataProductVO]
}

type DataProductVO {
    id: ID!,
    dataProductId: String,
    dataProductName: String,
    description: String,
    carLaFunction: CarLaFunctionVO,
    ddx: String,
    productOwner: DataProductTeamMemberVO,
    tags: [String],
    platform: PlatformVO,
    frontEndTools: [FrontendToolsVO],
    access: AccessVO,
    howToAccessTemplate: HowToAccessTemplateVO   
    agileReleaseTrain: AgileReleaseTrainVO,
    corporateDataCatalog: CorporateDataCatalogVO,
    recordStatus: String,
    isPublish: Boolean,
    notifyUsers: Boolean,
    createdDate: String,
    lastModifiedDate: String,
    additionalInformation: String,
    createdBy: CreatedByVO,
    modifiedBy: CreatedByVO,
    contactInformation: DataProductContactInformationVO,
    classificationConfidentiality: DataProductClassificationConfidentialityVO,
    personalRelatedData: DataProductPersonalRelatedDataVO,
    transnationalDataTransfer: DataProductTransnationalDataTransferVO,
    deletionRequirement: DataProductDeletionRequirementVO,
    datatransfersAssociated: [DatatransfersAssociatedVO],
    openSegments: [OpenSegmentsEnum]
}

type Query {
    dataproducts(published: Boolean, art: String, carlafunction: String,
        platform: String, frontendTool: String,
        productOwner: String, offset: Int, limit: Int, sortBy: String,
        sortOrder: String, dataSteward: String, informationOwner: String, department: String, division:String): DataProductCollection
}

type AccessVO{
    accessType: [String],
    kafka: String,
    oneApi: String,
    confidentiality: String,
    personalRelatedData: Boolean,
    deletionRequirement: Boolean,
    restrictDataAccess: Boolean,
    minimumInformationCheck: Boolean
}

type HowToAccessTemplateVO{
    useTemplate: [String],
    accessDetailsCollectionVO: AccessDetailsVO
}

type AccessDetailsVO{
    accessType: String,
    stepCollectionVO: StepDetailsVO
}

type StepDetailsVO{
    stepNumber: Int,
    stepIconType: String,
    stepText: String
}

type CarLaFunctionVO {
    id: ID!,
    name: String
}

type PlatformVO {
    id: ID,
    name: String
}

type FrontendToolsVO {
    id: ID!,
    name: String!
}

type AgileReleaseTrainVO {
    id: ID!,
    name: String
}

type CorporateDataCatalogVO {
    id: ID,
    name: String
}

type DataProductContactInformationVO {
    informationOwner: DataProductTeamMemberVO,
    name: DataProductTeamMemberVO,
    division: DivisionVO,
    department: String,
    localComplianceOfficer: String,
    appId: String
}

type DataProductTeamMemberVO {
    shortId: String!,
    userType: String,
    firstName: String,
    lastName: String,
    department: String,
    email: String,
    mobileNumber: String,
    company: String,
    teamMemberPosition: String,
    addedByProvider: Boolean
}

type DivisionVO {
    id: String,
    name: String,
    subdivision: SubdivisionVO
}

type SubdivisionVO {
    id: String,
    name: String
}

type CreatedByVO {
    id: ID!,
    name: String,
    description: String,
    firstName: String,
    lastName: String,
    department: String,
    email: String,
    mobileNumber: String
}

type DataProductClassificationConfidentialityVO {
    description: String,
    confidentiality: String
}

type DataProductPersonalRelatedDataVO {
    personalRelatedData: Boolean,
    description: String,
    purpose: String,
    legalBasis: String,
    contactAwareTransfer: Boolean,
    objectionsToTransfer: Boolean,
    transferringNonetheless: String,
    objections: String
}

type DataProductTransnationalDataTransferVO {
    dataTransferred: Boolean,
    notWithinEU: Boolean,
    contactAwareTransfer: Boolean,
    objectionsToTransfer: Boolean,
    transferringNonetheless: String,
    objections: String
}

type DataProductDeletionRequirementVO {
    deletionRequirements: String,
    description: String,
    otherRelevantInformation: String,
    insiderInformation: String
}

type DatatransfersAssociatedVO {
    id: String,
    datatransferId: String,
    datatrandferName: String
}

enum OpenSegmentsEnum {
    DESCRIPTION,
    CONTACTINFORMATION,
    CLASSIFICATIONANDCONFIDENTIALITY,
    IDENTIFYINGPERSONALRELATEDDATA,
    IDENTIFIYINGTRANSNATIONALDATATRANSFER,
    SPECIFYDELETIONREQUIREMENTS
}
