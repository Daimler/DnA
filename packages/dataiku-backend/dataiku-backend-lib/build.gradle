buildscript {
    ext {
        releaseVersion = "1.0.0"
    }
    dependencies {
		classpath("gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:2.18.2")
		classpath("org.apache.maven.plugins:maven-dependency-plugin:3.1.2")
    }

}

plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.0"
    id("org.openapi.generator") version "5.3.0"
    id "java"
    id "eclipse"
}

apply plugin: "maven-publish"
apply plugin: "org.hidetake.swagger.generator"

version = releaseVersion
group = "com.daimler.data"


repositories {
   		mavenLocal()
        mavenCentral()
		gradlePluginPortal()
		maven {
		  url "https://plugins.gradle.org/m2/"
		}
}


sourceCompatibility = 1.17
targetCompatibility = 1.17
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

application {
    mainClass.set("com.mb.dna.data.application.main.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}



compileJava {
    dependsOn processResources
}

sourceSets {
    unitTest {
        java { srcDir 'src/test/groovy' }
        resources { srcDir 'src/test/resources' }
        compileClasspath += sourceSets.main.runtimeClasspath
    }
    main {
        java { srcDirs = srcDirs }
    }
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.mb.*")
    }
}

dependencies {
    
    implementation("io.micronaut:micronaut-jackson-databind")
	implementation("io.micronaut.jaxrs:micronaut-jaxrs-server")
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    
    
    implementation group: 'io.micronaut', name: 'micronaut-http-client', version: '3.8.7'	
    //implementation("io.micronaut.reactor:micronaut-reactor")
    //implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    runtimeOnly group: 'io.micronaut', name: 'micronaut-http-server-netty', version: '3.8.7'
    implementation 'io.micronaut.security:micronaut-security-jwt'
    implementation("io.micronaut:micronaut-validation")
    implementation group: 'io.micronaut', name: 'micronaut-inject', version: '3.8.5'
    implementation group: 'io.micronaut', name: 'micronaut-inject-java', version: '3.8.5'
    implementation group: 'io.micronaut', name: 'micronaut-runtime', version: '3.8.5'
    implementation('org.apache.tomcat.embed:tomcat-embed-jasper:10.0.5')
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'

    implementation("io.swagger.core.v3:swagger-annotations")
    //implementation group: 'io.swagger.codegen.v3', name: 'swagger-codegen', version: '3.0.36'
    //implementation group: 'io.swagger.codegen.v3', name: 'swagger-generator', version: '3.0.36'
    //implementation group: 'io.swagger.codegen.v3', name: 'swagger-codegen-cli', version: '3.0.36'
	//swaggerCodegen("io.swagger.core.v3:swagger-codegen-cli:3.0.36")
    
    runtimeOnly("ch.qos.logback:logback-classic")

    //implementation("io.micronaut:micronaut-management:4.8.4")
    //annotationProcessor("io.micronaut:micronaut-management:4.8.4")
    implementation group: 'org.json', name: 'json', version: '20190722'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation("jakarta.annotation:jakarta.annotation-api:2.1.1")
    implementation("jakarta.persistence:jakarta.persistence-api:2.2.3")
	implementation group: 'io.micronaut.data', name: 'micronaut-data-processor', version: '3.9.6'
	//implementation group: 'io.micronaut.data', name: 'micronaut-data-hibernate-jpa', version: '3.9.6'{
    //    exclude group: "javax.persistence", module: "javax.persistence-api"
    //}
	implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    //implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    //runtimeOnly("org.postgresql:postgresql")
	
	//implementation("io.micronaut.flyway:micronaut-flyway")
	//runtimeOnly("org.flywaydb:flyway-postgres")

	compileOnly("org.projectlombok:lombok")
    //testCompileOnly("org.projectlombok:lombok")
	
	//implementation("io.micronaut.serde:micronaut-serde-jackson:2.0.0")
	//annotationProcessor("io.micronaut.serde:micronaut-serde-processor:2.0.0")
	annotationProcessor("org.projectlombok:lombok")
	//testAnnotationProcessor("org.projectlombok:lombok")
	//("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut:micronaut-validation")
    //annotationProcessor("jakarta.persistence:jakarta.persistence-api:3.1.0")
    //annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    //annotationProcessor("io.micronaut.jaxrs:micronaut-jaxrs-processor")
    
	implementation group: 'io.projectreactor', name: 'reactor-core', version: '3.5.3'
	//implementation("io.micronaut.graphql:micronaut-graphql")
	
}