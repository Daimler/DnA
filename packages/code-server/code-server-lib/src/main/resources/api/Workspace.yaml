# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : Workspace.yaml
#  **
#  ** Module     : core
#  ** 

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  BEALURI
#
#  Bug Number         :  
#  Changed By         :  
#  Change Description :  
#  Change On          :  
#  Search String      :  
#  
#  -------------------------------------------------------------------------------------------------------


swagger: "2.0"
info:
  version: "1.0.0"
  title: "Code-server Workspace Service"
host: "localhost:7979"
basePath: "/api/1.0"
consumes:
  - "application/json"
produces:
  - "application/json"
tags:
  - name: "code-server"
    description: "This service is used to maintain code-server workspaces information."

schemes:
  - "https"

paths:

  # Fetch all valid userinfo or by intent
  #
  #  supported http methods GET, POST
  #
  # path example ../workspaces

  /workspaces:
    get:
      tags:
        - "code-server"
      summary: "Get all codeServer workspaces for the user."
      description:  "Get all codeServer workspaces for the user."
      operationId: "getAll"
      parameters:
          - name: offset
            in: query
            description: page number from which listing of workspaces should start. Offset. Example 2
            required: false
            type: integer
          - name: limit
            in: query
            description: page size to limit the number of workspaces, Example 15
            required: false
            type: integer
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/WorkspaceCollectionVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
          
    post:
      tags:
        - "code-server"
      summary: "Initialize/Create Workbench for user in code-server."
      description: "Create workspace for user in code-server with given password"
      operationId: "createWorkspace"
      parameters:
        - name: "codeServerRequestVO"
          in: "body"
          description: "Request Body that contains data required for intialize code server workbench for user"
          required: true
          schema:
            $ref: "#/definitions/InitializeWorkspaceRequestVO"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/InitializeWorkspaceResponseVO"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
    

  # Fetch all valid userinfo or by intent
  #
  #  supported http methods GET, POST and DELETE
  #
  # path example ../workspaces/{id}

  /workspaces/{id}:
    get:
      tags:
        - "code-server"
      summary: "Get workspace details for a given Id."
      description: "Get workspace details for a given Id."
      operationId: "getById"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/CodeServerWorkspaceVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
    
    put:
      tags:
        - "code-server"
      summary: "Initialize Workbench for user."
      description: "Initialize workbench for collab user"
      operationId: "InitializeWorkspace"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "initializeCollabWSRequestVO"
          in: "body"
          description: "Request Body that contains data required for intialize code server workbench for user"
          required: true
          schema:
            $ref: "#/definitions/InitializeCollabWorkspaceRequestVO"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/InitializeWorkspaceResponseVO"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
                
    delete:
      tags:
        - "code-server"
      summary: "Delete workspace for a given Id."
      description: "Delete workspace for a given identifier."
      operationId: "deleteWorkspace"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be deleted"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
 
 
  /workspaces/{id}/collaborator:        
    post:
      tags:
        - "code-server"
      summary: "Add collaborator to existing workspace Project for a given Id."
      description: "Add collaborator to existing workspace Project "
      operationId: "addCollab"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "userRequestDto"
          in: "body"
          description: "Userinfo to add collaborator to project"
          required: true
          schema:
            $ref: "#/definitions/UserInfoVO"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/{id}/collaborator/{userid}:
    delete:
      tags:
        - "code-server"
      summary: "remove collaborator from workspace project for a given Id."
      description: "remove collaborator from workspace project for a given identifier."
      operationId: "removeCollab"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "userid"
          in: "path"
          description: "User ID to be deleted"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/{id}/projectowner:
    patch:
      tags:
        - "code-server"
      summary: "reassign owner from existing collaborator list for a given user Id."
      description: "reassign owner from existing collaborator list for a given user Id."
      operationId: "reassignOwner"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "UserIdDto"
          in: "body"
          description: "UserId to add collaborator as Owner"
          required: true
          schema:
            $ref: "#/definitions/UserIdVO"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /workspaces/{id}/deploy:        
    post:
      tags:
        - "code-server"
      summary: "Deploy workspace Project for a given Id."
      description: "deploy workspace Project for a given identifier."
      operationId: "deployWorkspaceProject"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "deployRequestDto"
          in: "body"
          description: "request body for the project to be deployed"
          required: true
          schema:
            $ref: "#/definitions/ManageDeployRequestDto"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
          
    delete:
      tags:
        - "code-server"
      summary: "undeploy workspace project for a given Id."
      description: "undeploy workspace project for a given identifier."
      operationId: "undeployWorkspaceProject"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
        - name: "deployRequestDto"
          in: "body"
          description: "Workspace ID for the project to be deployed"
          required: true
          schema:
            $ref: "#/definitions/ManageDeployRequestDto"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  # Fetch all valid userinfo or by intent
  #
  #  supported http methods GET, PUT
  #
  # path example ../workspaces/status/{name}

  /workspaces/status/{name}/:
    get:
      tags:
        - "code-server"
      summary: "Get workspace details for a given Id."
      description: "Get workspace details for a given Id."
      operationId: "getByName"
      parameters:
        - name: "name"
          in: "path"
          description: "Workspace name to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/CodeServerWorkspaceVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

          
definitions:

  WorkspaceCollectionVO:
    type: object
    properties:
      totalCount:
        type: integer
        description: "Total Record Count"
      records:
        type: array
        items:
          $ref: "#/definitions/CodeServerWorkspaceVO"
  
  WorkspaceUpdateRequestVO:
    type: object
    properties:
#      lastDeployedOn:
#        type: string
#        format: date
#        description: "Date of last deployment"  
      status:
        type: string
        enum: ["CREATED","CREATE_FAILED","DELETED","DELETE_FAILED","DEPLOYED","DEPLOYMENT_FAILED","UNDEPLOYED","UNDEPLOY_FAILED"]
        description: "Status of workspace job action create/delete/deploy request"
      targetEnvironment:
        type: string
      branch:
        type: string
      required:
          -status
       
  CodeServerWorkspaceVO:
    type: object
    properties:
      id: 
        type: string
        description: "Unique technical ID of workspace"
      workspaceId:
        type: string
        description: "Name of the workspace"
      projectDetails:
       $ref: "#/definitions/CodeServerProjectDetailsVO"
      description:
        type: string
        description: "description of the workspace"
      workspaceOwner:
        $ref: "#/definitions/UserInfoVO"
      gitUserName:
        type: string
        description: git username
      intiatedOn:
        type: string
        format: date
        description: "Date on which workspace is created" 
      workspaceUrl:
        type: string
        description: "Workspace url"
      status:
        type: string
        description: "Status of workspace - COLLABORATION_REQUESTED,CREATE_REQUESTED,CREATED,CREATE_FAILED,DELETE_REQUESTED,DELETED,DELETE_FAILED,DEPLOY_REQUESTED,
        DEPLOYED,DEPLOYMENT_FAILED,UNDEPLOY_REQUESTED,UNDEPLOYED,UNDEPLOY_FAILED"
      required:
        -projectDetails
        -workspaceOwner

  CodeServerProjectDetailsVO:
    type: object
    properties:
      projectName:
        type: string
      projectOwner:
        $ref: "#/definitions/UserInfoVO"
      projectCollaborators:
        type: array
        items:
         $ref: "#/definitions/UserInfoVO" 
      prodDeploymentDetails:
        $ref: "#/definitions/CodeServerDeploymentDetailsVO"
      intDeploymentDetails:
        $ref: "#/definitions/CodeServerDeploymentDetailsVO"
      recipeDetails:
        $ref: "#/definitions/CodeServerRecipeDetailsVO"
      gitRepoName:
        type: string
      projectCreatedOn:
        type: string
        format: date
      required:
        -projectName
        -recipeDetails
        
  ManageDeployRequestDto:
    type: object
    properties:
      targetEnvironment:
        type: string
        enum: [int,prod]
      branch:
        type: string
           
  CodeServerDeploymentDetailsVO:
    type: object
    properties:
      lastDeployedOn:
        type: string
        format: date
        description: "Date of last deployment"
      deploymentUrl:
        type: string
        description: "URL of the project deployed"  
      lastDeployedBy:
        $ref: "#/definitions/UserInfoVO" 
      lastDeployedBranch:
        type: string
        description: Branch used for last deployment
      lastDeploymentStatus:
        type: string
        description: Status of last deployement
         
  CodeServerRecipeDetailsVO:
    type: object
    properties:
      recipeId:
        type: string
        enum: [default,springboot,py-fastapi,react,angular,gradle,public-dna-backend,public-dna-frontend]
        description: "RecipeId of the workspace. Ex: Springboot Microservice"    
      environment:
        type: string
        enum: [Development, Testing, Production]
      repodetails:
        type: string
        description: "Public Github URL"      
      cloudServiceProvider:
        type: string
        enum: [DHC-CaaS]
        description: "Cloud services provider. Ex: DHC-CaaS"
      ramSize:
        type: string
        enum: [1,2]
        description: "RAM size needed"
      cpuCapacity:
        type: string
        enum: [1]
        description: "CPU capacity required"
      operatingSystem:
        type: string
        enum: [Debian-OS-11]
        description: "Operating system required"
      resource:
        type: string
        description: "Storage details of recipe"  
      required:
        -recipeId

  UserIdVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      required:
        -id

  UserInfoVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      firstName:
        type: string
        description: "First Name of the user"
      lastName:
        type: string
        description: "Last Name of the user"
      department:
        type: string
        description: "Department of the user"
      email:
        type: string
        description: "E-Mail of the user"
      mobileNumber:
        type: string
        description: "Mobile number of the user" 
      gitUserName:
        type: string
        description: git Username
      required:
        -id
        -gitUserName
                     
  BindingResult:
    type: object

  GenericMessage:
    type: object
    properties:
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"

  MessageDescription:
    type: object
    properties:
      message:
        type: string
        description: "message"
  
  InitializeCollabWorkspaceRequestVO:
    type: object
    properties:
      password:
        type: string
        description: "Create Password, required to login to workbench of codeserver"
      pat:
        type: string
        description: "Provide PAT to manage git repositories"
      required:
       - pat
       - password     
        
  InitializeWorkspaceRequestVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/CodeServerWorkspaceVO"
      password:
        type: string
        description: "Create Password, required to login to workbench of codeserver"
      pat:
        type: string
        description: "Provide PAT to manage git repositories"
      required:
       - pat
       - password     
       - data
        
  InitializeWorkspaceResponseVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/CodeServerWorkspaceVO"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"  
  
  CreatedByVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      firstName:
        type: string
        description: "First Name of the user"
      lastName:
        type: string
        description: "Last Name of the user"
      department:
        type: string
        description: "Department of the user"
      email:
        type: string
        description: "E-Mail of the user"
      mobileNumber:
        type: string
        description: "Mobile number of the user" 