# LICENSE START
#
# MIT License
#
# Copyright (c) 2019 Daimler TSS GmbH
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# LICENSE END
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : WorkspaceRecipe.yaml
#  **
#  ** Module     : core
#  **

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  BEALURI
#
#  Bug Number         :
#  Changed By         :
#  Change Description :
#  Change On          :
#  Search String      :
#
#  -------------------------------------------------------------------------------------------------------

swagger: "2.0"
info:
  version: "1.0.0"
  title: "Code-server Workspace Service"
host: "localhost:7979"
basePath: "/api/1.0"
consumes:
  - "application/json"
produces:
  - "application/json"
tags:
  - name: "code-server-recipe"
    description: "This service is used to maintain code-server workspaces information."

schemes:
  - "https"

paths:

  /recipeDetails:
    get:
      tags:
        - "code-server-recipe"
      summary: "Get all recipe managment workspaces for the user."
      description: "Get all codeServer recipe managment workspaces for the user."
      operationId: "getAllRecipes"
      parameters:
        - name: offset
          in: query
          description: page number from which listing of workspaces should start. Offset. Example 2
          required: false
          type: integer
        - name: limit
          in: query
          description: page size to limit the number of workspaces, Example 15
          required: false
          type: integer
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/RecipeCollectionVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

    post:
      tags:
        - "code-server-recipe"
      summary: "Initialize/Create recipe for user in code-server-recipe."
      description: "Create recipe for user in code-server with given password"
      operationId: "createRecipe"
      parameters:
        - name: "recipeRequestVO"
          in: "body"
          description: "Request Body that contains data required for intialize code server workbench for user"
          required: true
          schema:
            $ref: "#/definitions/RecipeVO"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/InitializeRecipeVo"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/{recipeName}:
    get:
      tags:
        - "code-server-recipe"
      summary: "Get workspace recipe details for a given Id."
      description: "Get workspace recipe details for a given Id."
      operationId: "getByRecipeName"
      parameters:
        - name: "recipeName"
          in: "path"
          description: "Workspace ID to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/InitializeRecipeVo"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/softwareLov:
    get:
      tags:
        - "code-server-recipe"
      summary: "Get all software details in recipe"
      description: "Get all softwares details for recipe in codespace"
      operationId: "getAllsoftwareLov"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/InitializeSoftwareLovVo"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/recipeLov:
    get:
      tags:
        - "code-server-recipe"
      summary: "Get all lov of recipes "
      description: "Get all recipes in codespace"
      operationId: "getAllrecipeLov"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/InitializeRecipeLovVo"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /recipeDetails/recipesByStatus:
      get:
        tags:
          - "code-server-recipe"
        summary: "Get all recipes which are in requested and accepted state, waiting for processing."
        description: "Get all recipes which are in requested and accepted state, waiting for processing"
        operationId: "getAllRecipesWhichAreInRequestedAndAcceptedState"
        parameters:
            - name: offset
              in: query
              description: page number from which listing of SecurityConfigs should start. Offset. Example 2
              required: false
              type: integer
            - name: limit
              in: query
              description: page size to limit the number of SecurityConfigs, Example 15
              required: false
              type: integer
        responses:
          201:
            description: "Returns message of success or failure"
            schema:
              $ref: "#/definitions/RecipeCollectionVO"
          204:
            description: "Fetch complete, no content found."
          400:
            description: "Bad request."
          401:
            description: "Request does not have sufficient credentials."
          403:
            description: "Request is not authorized."
          405:
            description: "Method not allowed"
          500:
            description: "Internal error"

  /recipeDetails/{name}/accept:        
    post:
      tags:
        - "code-server-recipe"
      summary: "Accepting the changes to be added in access management , marking status as Accepted if success"
      description: "Accepting the changes to be added in access management system"
      operationId: "acceptRecipeInfo"
      parameters:
        - name: "name"
          in: "path"
          description: "Recipe name to be fetched"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
          
  /recipeDetails/{name}/publish:        
    post:
      tags:
        - "code-server-recipe"
      summary: "Marking status after Publishing the changes added in access management system"
      description: "Marking status after Publishing the changes added in access management system"
      operationId: "publishRecipeInfo"
      parameters:
        - name: "name"
          in: "path"
          description: "recipe name to be fetched"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

definitions:
  RecipeVO:
    type: object
    properties:
      recipeName:
        type: string
        description: "recipeName  for recipe managment"
      recipeType:
        type: string
        enum: [public,private]
        description: "recipe type for codespace managment"
      repodetails:
        type: string
        description: "Git URL"
      diskSpace:
        type: string
        description: "disk size GB"
      minCpu:
        type: string
        description: "min CPU capacity required"
      maxCpu:
        type: string
        description: "max CPU capacity required"
      maxRam:
        type: string
        description: "min RAM capacity required"
      minRam:
        type: string
        description: "min RAM capacity required"
      oSName:
        type: string
        enum: [Debian-OS-11]
        description: "Operating system required"
      software:
        type: array
        items:
          type: string
      createdOn:
        type: string
        format: date
        description: "created date for recipe managment"
      createdBy:
        $ref: "#/definitions/UserInfoVO"
      plugins:
        type: array
        items:
          type: string
      isPublic:
        type: boolean
        default: true
      users:
        type: array
        items:
          $ref: "#/definitions/UsersVO" 
      status:
        type: string
        description: "status of the recipe"

  RecipeSoftwareVO:
    type: object
    properties:
      name:
        type: string
        description: "Operating system required"
      version:
        type: string
        description: "version of software"
        
  RecipeCollectionVO:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RecipeVO"
      count:
        type: integer
        description: "total number of records"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"  

  InitializeRecipeVo:
    type: object
    properties:
      data:
        type: object
        items:
          $ref: "#/definitions/RecipeVO"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"  

  InitializeSoftwareLovVo:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/SoftwareCollection"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription" 

  InitializeRecipeLovVo:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RecipeLovVO"
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription" 

  RecipeLovVO:
    type: object
    properties: 
      id:
        type: string
        description: "ID of recipe"
      recipeName:
        type: string
        description: "name of the recipe"

  SoftwareCollection:
    type: object
    properties: 
      softwareName:
        type: string
        description: "version of the software"
  
  UsersVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      firstName:
        type: string
        description: "First Name of the user"
      lastName:
        type: string
        description: "Last Name of the user"
      department:
        type: string
        description: "Department of the user"
      email:
        type: string
        description: "E-Mail of the user"
      mobileNumber:
        type: string
        description: "Mobile number of the user" 

