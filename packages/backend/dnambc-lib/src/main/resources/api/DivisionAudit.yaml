# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
#  
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : DivisionAudit.yaml
#  **
#  ** Module     : core
#  ** 

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  BEALURI
#
#  Bug Number         :  
#  Changed By         :  
#  Change Description :  
#  Change On          :  
#  Search String      :  
#  
#  -------------------------------------------------------------------------------------------------------
  

swagger: "2.0"
info:
 version: "1.0.0"
 title: "core DivisionAudit Service"
host: "localhost:7171"
basePath: "/api/1.0"
consumes:
 - "application/json"
produces:
 - "application/json"
tags:
 - name: "DivisionAudit"
   description: "This service is used to maintain auditLogs used in divisions."

schemes:
- "https"

paths:

# create, update and getAll auditLogs
#
# supported http methods GET, POST
#
# path example ../auditLogs

 /division/audit:
  get:
   tags:
    - "DivisionAudit"
   summary: "Get all available auditLogs."
   description:  "Get all auditLogs. This endpoints will be used to Get all valid available auditLogs maintenance records."
   operationId: "getAll"
   parameters:          
          - name: offset
            in: query
            description: page number from which listing of audits should start. Offset. Example 2
            required: false
            type: integer  
          - name: limit
            in: query
            description: size to limit the number of audits, Example 10
            required: false
            type: integer  
   responses:
    201:
     description: "Returns message of succes or failure"
     schema:
       $ref: "#/definitions/DivisionAuditCollectionVO"
    204:
      description: "Fetch complete, no content found."
    401:
     description: "Request does not have sufficient credentials."
    403:
     description: "Request is not authorized."
    405:
     description: "Method not allowed"
    500:
     description: "Internal error"
     
# Fetch all valid auditLogs or by intent
#
#  supported http methods GET, POST and DELETE 
#
# path example ../auditLogs

 /division/audit/{divisionId}:
  get:
   tags:
    - "DivisionAudit"
   summary: "Get all available DivisionAudit Logs for a selected division ID."
   description:  "Get all DivisionAudit Logs. This endpoints will be used to Get all valid available auditLogs for a given divisionId maintenance records."
   operationId: "getByDivisionId"  
   parameters:
        - name: "divisionId"
          in: "path"
          description: "Audit logs of DivisionID to be fetched"
          required: true
          type: "string"
        - name: offset
          in: query
          description: page number from which listing of audits should start. Offset. Example 2
          required: false
          type: integer  
        - name: limit
          in: query
          description: size to limit the number of audits, Example 10
          required: false
          type: integer  
   responses:
    201:
     description: "Returns message of succes or failure"
     schema:
       $ref: "#/definitions/DivisionAuditCollectionVO"
    204:
      description: "Fetch complete, no content found."
    401:
     description: "Request does not have sufficient credentials."
    403:
     description: "Request is not authorized."
    405:
     description: "Method not allowed"
    500:
     description: "Internal error"
  
    
 
definitions:
 CreatedByVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      firstName:
        type: string
        description: "First Name of the user"
      lastName:
        type: string
        description: "Last Name of the user"
      department:
        type: string
        description: "Department of the user"
      email:
        type: string
        description: "E-Mail of the user"
      mobileNumber:
        type: string
        description: "Mobile number of the user"
        
 DivisionAuditCollectionVO: 
  description: "Collection of AuditLogs."
  type: object
  properties:
    records:
        type: array
        items:
          $ref: "#/definitions/DivisionAuditVO"
    totalCount:
     type: integer
     description: "Total records from the database"      
  
 DivisionAuditVO:
  type: object
  properties: 
    divisionId:
     type: string
     description: "ID of the Division."
    action:
     type: string
     enum: [Create,Update,Delete]
     description: "Action performed on the division."
    message:
     type: string
     description: "Audit message."
    createdBy:
     $ref: "#/definitions/CreatedByVO"
     description: "CreatedBy user details."   
    createdOn:
     type: string
     format: date
     description: "Time when division is modified." 
   