# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
# 
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : logos.yaml
#  **
#  ** Module     : core
#  ** 

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  BEALURI
#
#  Bug Number         :  
#  Changed By         :  
#  Change Description :  
#  Change On          :  
#  Search String      :  
#  
#  -------------------------------------------------------------------------------------------------------
  

swagger: "2.0"
info:
 version: "1.0.0"
 title: "core logo Service"
host: "localhost:7171"
basePath: "/api/1.0"
tags:
 - name: "logo"
   description: "This service is used for s3 file operations."

schemes:
- "https"

paths:

# path to upload a file
#
#  supprorted http methods GET, POST and DELETE 
#
# path example ../attachments

 /logo:
  post:
   tags:
    - "logo"
   summary: "Uploads a new logo."
   description: "Uploads lgog."
   operationId: "uploadLogo"
   parameters:
    - name: "file" 
      in: "body" 
      description: "Request Body that contains data or file contents" 
      required: true
      schema:
       $ref: "#/definitions/LogoVO"
   responses:
    201: 
     description: "Returns message of succes or failure " 
     schema:
       $ref: "#/definitions/UploadResponseVO"
    400:
     description: "Bad Request"
     schema:
       $ref: "#/definitions/UploadResponseVO"
    401:
     description: "Request does not have sufficient credentials."
    403:
     description: "Request is not authorized."
    405:
     description: "Method not allowed"
    500:
     description: "Internal error"

# path to delete or download existing files using keyName
#
#  supported http methods DELETE, GET
#
# path examples----
#   DELETE    .../attachments/xxx
#   GET       .../attachments/xxx

 /logo/{id}:
   get:
    tags:
    - "logo"
    summary: "Downloads the logo"
    description:  "Downloads the file for the given keyName"
    operationId: "getLogo" 
    parameters:
      - name: "id"
        in: "path"
        description: "keyName"
        required: true
        type: "string"
    responses:
      200:
       description: "Successfully downloaded."
       schema:
         $ref: "#/definitions/LogoVO"
      400:
       description: "Bad request"
      401:
       description: "Request does not have sufficient credentials."
      403:
       description: "Request is not authorized."
      404:
       description: "Invalid id, record not found."
      500:
       description: "Internal error"
   delete:
    tags:
    - "logo"
    summary: "Deletes the logo"
    description:  "Deletes the file for the given keyName"
    operationId: "deleteLogo"
    parameters:
      - name: "id"
        in: "path"
        description: "keyName"
        required: true
        type: "string"
    responses:
      200:
       description: "Successfully deleted."
       schema:
         $ref: "#/definitions/GenericMessage"
      400:
       description: "Bad request"
      401:
       description: "Request does not have sufficient credentials."
      403:
       description: "Request is not authorized."
      404:
       description: "Invalid id, record not found."
      500:
       description: "Internal error"
     
definitions:
 UploadResponseVO:
    type: object
    properties:
      logoDetails: 
        $ref: "#/definitions/LogoDetailsVO"
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
          
 LogoDetailsCollectionVO:
    type: object
    properties:
      files:
        type: array
        items:
          $ref: "#/definitions/LogoDetailsVO"
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
         
 LogoDetailsVO:
    type: object
    properties:
      id:
        type: string
        description: Unique id of the file which is used as keyname while saving
      fileName:
        type: string
        description: Defines the file name
      fileSize:
        type: string
        description: Defines the size of the file
      isPredefined:
        type: boolean
        description: predefined logo will be used or not.
    required:
      - id

 LogoVO:
    type: object
    properties:
      logo:
        type: string
        format: binary
        description: Blob String of logo image
      fileName:
        type: string
        description: Defines the file name
      fileSize:
        type: string
        description: Defines the size of the file
    required:
      - logo

        
 BindingResult:
  type: object
  
 GenericMessage:
  type: object
  properties:
    success:
      type: string
    errors:
      type: array
      items: 
        $ref: "#/definitions/MessageDescription"
    warnings:
      type: array
      items:
        $ref: "#/definitions/MessageDescription"
  
 MessageDescription:
  type: object
  properties:
    message: 
      type: string
      description: "error message"
 