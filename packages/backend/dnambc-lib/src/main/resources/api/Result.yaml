# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : result.yaml
#  **
#  ** Module     : core
#  **

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  BEALURI
#
#  Bug Number         :
#  Changed By         :
#  Change Description :
#  Change On          :
#  Search String      :
#
swagger: "2.0"
info:
  version: "1.0.0"
  title: "core result Service"
host: "localhost:7171"
basePath: "/api/1.0"
consumes:
  - "application/json"
produces:
  - "application/json"
tags:
  - name: "results"
    description: "This service is used to maintain results used in solutions."

schemes:
  - "https"

paths:
  # Fetch all valid results or by intent
  #
  #  supprorted http methods GET, POST and DELETE
  #
  # path example ../results

  /results:
    get:
      tags:
        - "results"
      summary: "Get all available results."
      description: "Get all results. This endpoints will be used to Get all valid available results maintenance records."
      operationId: "getAll"
      responses:
        201:
          description: "Returns message of succes or failure"
          schema:
            $ref: "#/definitions/ResultCollection"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

definitions:
  ResultVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of Result"
      name:
        type: string
        description: "Name of the Result"
    #   minLength: 1
  #     pattern: '[a-zA-Z\s]+'
  # required:
  #    - name
  ResultCollection:
    description: "Collection of Results."
    type: array
    items:
      $ref: "#/definitions/ResultVO"
