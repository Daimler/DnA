spring:
  mvc.pathmatch.matching-strategy: ant_path_matcher
  application:
    name: trinio-registry-service
    version: 1.2.1

  flyway:
    enabled: ${FLYWAY_ENABLED:false}
    baseline-on-migrate: ${FLYWAY_BASELINE_ON_MIGRATE:false}
    baselineVersion: ${FLYWAY_BASELINEVERSION:0}
    schemas: ${FLYWAY_SCHEMA:public}   
        
  jpa:
    database: POSTGRESQL
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false
    hibernate:
      ddl-auto: none

  datasource:
    hikari:
      connection-timeout: 4000
    platform: postgres
    url: ${API_DB_URL:jdbc:postgresql://XXXXXX:XXXX/XXXX}
    username: ${API_DB_USER:usernameXXXX}
    password: ${API_DB_PASS:userpasswordXXXX}

    driverClassName: org.postgresql.Driver

  cloud:
    stream:
      default-binder: kafka
      kafka:
        binder:
          brokers: ${NAAS_BROKER:XXXX:XXXX}
    
dna:
  uri: ${DNA_URI:XXXXXX}
  dnaAuthEnable: ${DNA_AUTH_ENABLE:false}
  
kafka:
  centralTopic:
    name: dnaCentralEventTopic
    
server:
  port: 7575

#Cors Filter origin Domains  
allowedCorsOriginPatternUrl: ${CORS_ORIGIN_URL:http://*}
  
jwt:
  secret:
    key: ${JWT_SECRET_KEY:XXXXXX}
      
minio:
  baseUri: ${MINIO_BASEURI:http://xxxxx}
  accessKey: ${MINIO_ACCESSKEY:XXXXX}
  secretKey: ${MINIO_SECRETKEY:XXXXX}

storage.uri : ${STORAGE_API_BASE_URL:XXXXX}

trino:
  userauth: ${TRINO_USERAUTH:XXXXX}
  userid: ${TRINO_USERID:XXXXX}
  uri: ${TRINO_BASEURI:XXXXX}
  host: ${TRINO_HOST:XXXXX}
  port: ${TRINO_PORT:XXXX}
  user: ${TRINO_USER:XXXXX}
  password: ${TRINO_PASSWORD:XXXXX}
  ssl: ${TRINO_SSL:true}
  sslverification: ${TRINO_SSLVERIFICATION:NONE}
  catalog:
    default: ${TRINO_CATALOG:XXXX}
    iceberg: ${TRINO_ICEBERG_CATALOG:XXXX}
    delta: ${TRINO_ICEBERG_CATALOG:XXXX}
  hadoop.remoteUser: ${TRINO_UNIX_HADOOP_REMOTEUSER:spring}
   
swagger.headers.authorization.token: ${SWAGGER_HEADER_AUTH:XXXXXX}
management.endpoints.web.exposure.include: loggers,health
management.endpoint.loggers.enabled: true
management.endpoint.health.probes.enabled: true
management.endpoint.health.show-details: always

logging:
  service:
    environment: ${LOGGING_ENVIRONMENT:DEV}
    path: ${LOGGING_PATH:/var/log}
  level:
    com:
      daimler:
        data: INFO
    org.springframework.boot.autoconfigure.logging: INFO
    org:
      springframework:
        web:
          client:
            RestTemplate: INFO
