#  This source is part of the Daimler AG.
#  Copyright  Daimler and/or its affiliates.  All rights reserved.
#  
#  No part of this work may be reproduced, stored in a retrieval system, adopted or transmitted in any form or by any means, electronic, mechanical, photographic, graphic, optic recording or otherwise, translated in any language or computer language, without the prior written permission of Daimler AG and/or its affiliates.
#  
# 
#  
#  
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : scanner.yaml
#  **
#  ** Module     : core
#  ** 

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  BEALURI
#
#  Bug Number         :  
#  Changed By         :  
#  Change Description :  
#  Change On          :  
#  Search String      :  
#  
#  -------------------------------------------------------------------------------------------------------
  

swagger: "2.0"
info:
 description: "REST API uri document management. Description of all the available APIs along with request and response formats. Also provides options to try calling to execute running APIs and check"
 version: "0.0.1"
 title: "DNA Malware Scan as a Service."
host: "localhost:7171"
basePath: "/api/1.0"
tags:
 - name: "scans"
   description: "This service is used for file scanning operations."

schemes:
- "https"

paths:

# path to upload a file
#
#  supprorted http methods GET, POST and DELETE 
#
# path example ../scan

 /scan/upload:
  post:
   tags:
    - "scans"
   summary: "Uploads a new file to scan."
   description: "Uploads file for malware scanning"
   operationId: "uploadFile"
   parameters:
     - in: formData
       name: files
       type: file
       description: The file to upload.
       required: true 
   responses:
    201: 
     description: "Returns message of succes or failure " 
     schema:
       $ref: "#/definitions/UploadScanResponseWrapperVO"
    400:
     description: "Bad Request"
     schema:
       $ref: "#/definitions/UploadScanResponseWrapperVO"
    401:
     description: "Request does not have sufficient credentials."
    403:
     description: "Request is not authorized."
    405:
     description: "Method not allowed"
    500:
     description: "Internal error"

# path to get health of clamd instance
#
#  supported http methods  GET
#
# path examples----
#   GET       .../scan/clamd/health

 /scan/health:
   get:
    tags:
    - "scans"
    summary: "gives health of clamd instance"
    description:  "gives health of clamd instance"
    operationId: "healthCheck" 
    responses:
      200:
       description: "Successfully downloaded."
       schema:
         $ref: "#/definitions/GenericMessage"
      400:
       description: "Bad request"
      401:
       description: "Request does not have sufficient credentials."
      403:
       description: "Request is not authorized."
      404:
       description: "Invalid id, record not found."
      500:
       description: "Internal error"
     
definitions:
 UploadScanResponseWrapperVO:
   type: object
   properties:
#     response: 
#       $ref: "#/definitions/GenericMessage"
     fileDetails:
       type: array
       items:
         $ref: "#/definitions/FileScanDetailsVO" 
      
 FileScanDetailsVO:
    type: object
    properties:
      fileName:
        type: string
        description: Defines the file name
      fileSize:
        type: integer
        format: int64
        description: Defines the size of the file
      fileType:
        type: string
        description: Defines the type of the file
      scanTime:
        type: integer
        format: int64
        description: time took to scan file parts in milli seconds
      detected:
        type: boolean
        description: boolean indicating if malware if detected in file part
      errorMessage:
        type: string
        description: error while scanning file part
      hash:
        type: string
      uploadTime:
        type: integer
        format: int64
        description: time took to upload file part
            
 GenericMessage:
  type: object
  properties:
    success:
      type: string
    errors:
      type: array
      items: 
        $ref: "#/definitions/MessageDescription"
    warnings:
      type: array
      items:
        $ref: "#/definitions/MessageDescription"
  
 MessageDescription:
  type: object
  properties:
    message: 
      type: string
      description: "error message"
 