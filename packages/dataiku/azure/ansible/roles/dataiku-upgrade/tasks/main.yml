---
#Checking prerequisites
- name: "Collect installed package facts"
  package_facts:
    manager: "auto"
  tags: [ dss-upgrade-production, dss-upgrade-training ]

- name: "Check if Azure CLI is installed"
  fail: msg='Please Install Azure Cli'
  when: "'azure-cli' not in ansible_facts.packages"
  tags: [ dss-upgrade-production, dss-upgrade-training ]

- name: "Check if PIGZ is installed"
  fail: msg='Please Install PIGZ'
  when: "'pigz' not in ansible_facts.packages"
  tags: [ dss-upgrade-production, dss-upgrade-training ]
  
- name: "Ensure AZURE_STORAGE_CONNECTION_STRING is set before Upgrade"
  fail: msg='AZURE_STORAGE_CONNECTION_STRING environment variable is not set'
  when: azure_storage_conn_string == ""
  tags: [ dss-upgrade-production, dss-upgrade-training ]
  
- name: "Ensure AZURE_STORAGE_CONTAINER is set before Upgrade"
  fail: msg='AZURE_STORAGE_CONTAINER environment variable is not set'
  when: azure_storage_container == ""
  tags: [ dss-upgrade-production, dss-upgrade-training ]

#Pre Upgrade task
- name: Stop / Start Dataiku after installation to pull config changes properly
  become: true
  shell:
    cmd: |
      /etc/init.d/dataiku stop
  tags: [dss-upgrade-production, dss-upgrade-training]

- name: Create Backup Folder
  file:
    path: "{{dss_backup_directory}}"
    state: directory
    owner: "{{dss_system_user}}"
    group: "{{dss_system_user}}"
    mode: "775"
  tags: [ dss-upgrade-production, dss-upgrade-training]

- name: Backup Dataiku Directory
  shell: tar --use-compress-program="pigz -k" -cf {{dss_backup_directory}}/dataiku_backup_{{date_now}}_{{ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0])}}.tar.gz {{dss_data_directory}}
  tags: [ dss-upgrade-production, dss-upgrade-training]

- name: Upload backup file into Azure Storage container
  shell: "az storage blob upload -c {{azure_storage_container}} -f {{dss_backup_directory}}/dataiku_backup_{{date_now}}_{{ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0])}}.tar.gz -n dataiku_backup_{{date_now}}_{{ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0])}}.tar.gz --connection-string '{{azure_storage_conn_string}}'"
  tags: [dss-upgrade-production, dss-upgrade-training]

#Upgrading Dataiku 
- name: Create install directory
  file:
    path: "{{dss_install_directory}}"
    state: directory
    owner: "{{dss_system_user}}"
    mode: "755"
  tags: [dss-upgrade-production, dss-upgrade-training]

- name: Check if DSS archive already download
  stat:
    path: "{{dss_install_directory}}/{{dss_install_archive_name_with_extension}}"
  register: dss_archive_stat_result
  tags: [dss-upgrade-production, dss-upgrade-training]

- name: Download DSS
  become_user: "{{dss_system_user}}"
  get_url:
    url: "{{dss_download_url}}"
    dest: "{{dss_install_directory}}"
  when: not dss_archive_stat_result.stat.exists
  tags: [dss-upgrade-production, dss-upgrade-training]

- name: Unarchive DSS
  become_user: "{{dss_system_user}}"
  unarchive:
    src: "{{dss_install_directory}}/{{dss_install_archive_name_with_extension}}"
    dest: "{{dss_install_directory}}"
    creates: "{{dss_home_directory}}"
    remote_src: yes
  tags: [dss-upgrade-production, dss-upgrade-training]

- name: Run DSS upgrade
  become_user: "{{dss_system_user}}"
  shell: yes Y | {{dss_home_directory}}/installer.sh -d {{dss_data_directory}} -u
  tags: [dss-upgrade-production, dss-upgrade-training]

##Post Upgrade 
#Install R
- name: Run R installer (it takes a while to compile dependencies)
  become_user: "{{dss_system_user}}"
  command: "{{dss_data_directory}}/bin/dssadmin install-R-integration"
  tags: [dss-upgrade-production, dss-upgrade-training]

#Install User Isolation Framework
- name: Install User Isolation Framework
  shell: "{{dss_data_directory}}/bin/dssadmin install-impersonation {{dss_system_user}}"
  tags: [dss-upgrade-production]

# Start DSS
- name: Stop / Start Dataiku after installation to pull config changes properly
  become: true
  shell:
    cmd: |
      /etc/init.d/dataiku start
  tags: [dss-upgrade-production, dss-upgrade-training]

#Cleanup
- name: Remove backup file from local storage
  file:
    path: "{{dss_backup_directory}}/dataiku_backup_{{date_now}}_{{ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0])}}.tar.gz"
    state: absent
  tags: [dss-upgrade-production, dss-upgrade-training]
