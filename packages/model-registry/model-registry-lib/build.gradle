/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/building_java_projects.html
 */

buildscript {
    ext {
        springBootVersion = "2.4.4"
        releaseVersion = "2.0.0"
    }
    repositories {
        mavenLocal()
        mavenCentral()
		gradlePluginPortal()
		maven {
		  url "https://plugins.gradle.org/m2/"
		}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:2.18.2")
		classpath("org.apache.maven.plugins:maven-dependency-plugin:3.1.2")
    }

}


plugins {
    // the plugins DSL is replacing apply plugin over time for Java-plugins. It is therefore favoured over the legacy "apply plugin:" approach
    id "java"
    id "eclipse"
}

apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"
apply plugin: "maven-publish"
apply plugin: "org.hidetake.swagger.generator"

repositories {
        mavenLocal()
        mavenCentral()
		gradlePluginPortal()
		maven {
		  url "https://plugins.gradle.org/m2/"
		}
}

group 'com.daimler.data'
version = releaseVersion

sourceCompatibility = 1.14
targetCompatibility = 1.14
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

dependencies {


	implementation group: 'io.kubernetes', name: 'client-java', version: '15.0.1'
	implementation group: 'io.kubernetes', name: 'client-java-spring-integration', version: '15.0.1'
	
    
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.4.0'
    implementation group: 'org.json', name: 'json', version: '20190722'

    implementation('ch.qos.logback:logback-classic:1.2.3')

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.30'
    implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.30'
    implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.30'

    implementation('ch.qos.logback:logback-core:1.2.3')
    //1.5.18
    implementation 'io.swagger:swagger-annotations:1.6.2'

	// https://mvnrepository.com/artifact/io.swagger/swagger-codegen-cli
    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.4.20'

	// https://mvnrepository.com/artifact/cglib/cglib-nodep
    implementation group: 'cglib', name: 'cglib-nodep', version: '3.3.0'
    
    implementation('org.springframework.boot:spring-boot-starter-web')
    // implementation('org.springframework.boot:spring-boot-starter-security')
    //implementation('org.apache.tomcat.embed:tomcat-embed-jasper:8.0.47')
	implementation('org.apache.tomcat.embed:tomcat-embed-jasper:10.0.5')

	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	
    implementation('io.springfox:springfox-swagger-ui:2.9.2')
    
    // https://mvnrepository.com/artifact/org.codehaus.mojo/animal-sniffer-annotations
    implementation group: 'org.codehaus.mojo', name: 'animal-sniffer-annotations', version: '1.20'
	
	// https://mvnrepository.com/artifact/org.antlr/antlr4-runtime
    implementation group: 'org.antlr', name: 'antlr4-runtime', version: '4.9.2'

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    implementation 'org.projectlombok:lombok:1.18.22'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    
    implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	// https://mvnrepository.com/artifact/net.minidev/json-smart
    implementation group: 'net.minidev', name: 'json-smart', version: '2.4.7'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
