# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : generateJwt.yaml
#  **
#  ** Module     : core
#  ** 

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  PRINCKU
#
#  Bug Number         :  
#  Changed By         :  
#  Change Description :  
#  Change On          :  
#  Search String      :  
#  
#  -------------------------------------------------------------------------------------------------------
  

swagger: "2.0"
info:
 version: "1.0.0"
 title: "generate jwt service"
host: "localhost:7373"
basePath: "/api/1.0"
consumes:
 - "application/json"
produces:
 - "application/json"
tags:
 - name: "jwt"
   description: "This service is used to generate jwt."

schemes:
- "https"

paths:

# path to generate jwt
#
#  supported http methods GET
#
# path example ../models/jwt

 /models/jwt:
  get:
   tags:
    - "jwt"
   summary: "Generate jwt to access models"
   description:  "Generate jwt to access models"
   operationId: "generateToken"
   parameters:
     - name: appId
       in: header
       description: appId to generate token.
       required: true
       type: string   
     - name: appKey
       in: header
       description: appKey to generate token
       required: true
       type: string   
   responses:
    200:
     description: "Returns message of succes or failure"
     schema:
       $ref: "#/definitions/JwtResponseVO"
    400:
     description: "Bad request."
    401:
     description: "Request does not have valid credentials."
    403:
     description: "Request is not authorized."
    405:
     description: "Method not allowed"
    500:
     description: "Internal error"
   
definitions:
 JwtResponseVO:
    type: object
    properties:
      token:
        type: string
        description: "Token to access models"
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"                      
  
 MessageDescription:
  type: object
  properties:
    message: 
      type: string
      description: "error message"
 