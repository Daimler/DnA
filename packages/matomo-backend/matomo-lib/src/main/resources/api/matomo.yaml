# LICENSE START
#
# MIT License
#
# Copyright (c) 2019 Daimler TSS GmbH
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# LICENSE END
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : matomo.yaml
#  **
#  ** Module     : core
#  **

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  BEALURI
#
#  Bug Number         :
#  Changed By         :
#  Change Description :
#  Change On          :
#  Search String      :
#
#  -------------------------------------------------------------------------------------------------------


swagger: "2.0"
info:
  version: "1.0.0"
  title: "Matomo Workspace Service"
host: "localhost:8989"
basePath: "/api/1.0"
consumes:
  - "application/json"
produces:
  - "application/json"
tags:
  - name: "matomo"
    description: "This service is used to maintain matomo information."

schemes:
  - "https"

paths:

# Fetch all valid userinfo or by intent
#
#  supported http methods GET, POST, PUT
#
# path example ../matomo

  /matomo:
    post:
      tags:
        - "matomo-sites"
      summary: "Initialize/Create matomo site for user."
      description: "Create matomo site for user "
      operationId: "createMatomoSite"
      parameters:
        - name: "matomoRequestVO"
          in: "body"
          description: "Request Body that contains data required to initialize matomo site for user"
          required: true
          schema:
            $ref: "#/definitions/MatomoSiteCreateRequestWrapperVO"
      responses:
        201:
          description: "Returns message of success or failure "
          schema:
            $ref: "#/definitions/MatomoResponseVO"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"


    get:
      tags:
        - "matomo-sites"
      summary: "Get all matomo sites for the user."
      description: "Get all matomo sites for the user."
      operationId: "getAll"
      parameters:
        - name: offset
          in: query
          description: page number from which listing of matomo should start. Offset. Example 2
          required: false
          type: integer
        - name: limit
          in: query
          description: page size to limit the number of matomo, Example 15
          required: false
          type: integer
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/MatomoCollectionVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  /matomo/{id}/sites:
    get:
      tags:
        - "matomo-sites"
      summary: "Get matomo details for a given Id."
      description: "Get matomo details for a given Id."
      operationId: "getById"
      parameters:
        - name: "id"
          in: "path"
          description: "matomo ID to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/MatomoVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
    put:
      tags:
        - "matomo-sites"
      summary: "update matomo details for a given Id."
      description: "update matomo details for a given Id."
      operationId: "updateById"
      parameters:
        - name: "id"
          in: "path"
          description: "matomo ID to be updated"
          required: true
          type: "string"
        - name: "matomoUpdateRequestVO"
          in: "body"
          description: "Request Body that contains data required for updating of collab details"
          required: true
          schema:
            $ref: "#/definitions/MatomoSiteUpdateRequestVO"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/MatomoResponseVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

    delete:
      tags:
        - "matomo-sites"
      summary: "delete matomo details for a given Id."
      description: "delete matomo details for a given Id."
      operationId: "deleteById"
      parameters:
        - name: "id"
          in: "path"
          description: "matomo ID to be delete"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success"
          schema:
            $ref: "#/definitions/GenericMessage"
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"


definitions:
  MatomoSiteCreateRequestWrapperVO:
    type: object
    description: "Site create request model definition"
    properties:
      data:
        $ref: "#/definitions/MatomoSiteRequestVO"

  MatomoSiteRequestVO:
    type: object
    properties:
      siteName:
        type: string
        description: "name of the matomo site"
      siteUrl:
        type: string
        description: "site url for the matomo site"
      division:
        type: string
        description: "division for the matomo site"
      subDivision:
        type: string
        description: "sub division for the matomo site"
      department:
        type: string
        description: "department for the matomo site"
      status:
        type: string
        description: "status for the matomo site"
      classificationType:
        type: string
        description: "Classification type for matomo site."
      piiData:
        type: boolean
        description: "If Matomo site contains personally identifiable information."
      permission:
        type: string
        description: "Read write admin permissions"
      collaborators:
        type: array
        items:
          $ref: "#/definitions/CollaboratorVO"
      required:
        - siteName
        - siteUrl
        - division
        - department
        - status
        - classificationType
        - piiData

  MatomoResponseVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/MatomoVO"
      response:
        $ref: "#/definitions/GenericMessage"

  MatomoCollectionVO:
    type: object
    properties:
      totalCount:
        type: integer
        description: "Total Record Count"
      records:
        type: array
        items:
          $ref: "#/definitions/MatomoVO"

  MatomoVO:
    type: object
    properties:
      id:
        type: string
        description: "id of matomo site"
      siteId:
        type: string
        description: "site id of the matomo site"
      siteName:
        type: string
        description: "name of the matomo site"
      siteUrl:
        type: string
        description: "defines the site url"
      division:
        type: string
        description: "division for the matomo site"
      subDivision:
        type: string
        description: "sub division for the matomo site"
      department:
        type: string
        description: "department for the matomo site"
      status:
        type: string
        description: "status for the matomo site"
      classificationType:
        type: string
        description: "Classification type for matomo site."
      piiData:
        type: boolean
        description: "If Matomo site contains personally identifiable information."
      permission:
        type: string
        description: "Read write admin permissions"
      collaborators:
        type: array
        items:
          $ref: "#/definitions/CollaboratorVO"
      createdBy:
        $ref: "#/definitions/CreatedByVO"
        description: createdBy user details
      createdOn:
        type: string
        format: date
        description: date when site created
      lastModified:
        type: string
        format: date
        description: date when site was last modified

  MatomoSiteVO:
    type: object
    properties:
      id:
        type: string
        description: "id of matomo site"
      siteId:
        type: string
        description: "site id of the matomo site"
      siteName:
        type: string
        description: "name of the matomo site"
      siteUrl:
        type: string
        description: "defines the site url"
      division:
        type: string
        description: "division for the matomo site"
      subDivision:
        type: string
        description: "sub division for the matomo site"
      department:
        type: string
        description: "department for the matomo site"
      status:
        type: string
        description: "status for the matomo site"
      classificationType:
        type: string
        description: "Classification type for matomo site."
      piiData:
        type: boolean
        description: "If Matomo site contains personally identifiable information."
      permission:
        type: string
        description: "Read write admin permissions"
      collaborators:
        type: array
        items:
          $ref: "#/definitions/CollaboratorVO"
      createdBy:
        $ref: "#/definitions/CreatedByVO"
        description: createdBy user details
      createdOn:
        type: string
        format: date
        description: date when site created
      lastModified:
        type: string
        format: date
        description: date when site was last modified



  MatomoSiteUpdateRequestVO:
    type: object
    properties:
      siteName:
        type: string
        description: "name of the matomo site"
      siteUrl:
        type: string
        description: "site url for the matomo site"
      division:
        type: string
        description: "division for the matomo site"
      subDivision:
        type: string
        description: "sub division for the matomo site"
      department:
        type: string
        description: "department for the matomo site"
      status:
        type: string
        description: "status for the matomo site"
      classificationType:
        type: string
        description: "Classification type for matomo site."
      piiData:
        type: boolean
        description: "If Matomo site contains personally identifiable information."
      permission:
        type: string
        description: "Read write admin permissions"
      addCollaborators:
        type: array
        items:
          $ref: "#/definitions/CollaboratorVO"
          description: "To add collaborators"
      removeCollaborators:
        type: array
        items:
          $ref: "#/definitions/CollaboratorVO"
          description: "To remove collaborators"

  CreatedByVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      firstName:
        type: string
        description: "First Name of the user"
      lastName:
        type: string
        description: "Last Name of the user"
      department:
        type: string
        description: "Department of the user"
      email:
        type: string
        description: "E-Mail of the user"
      mobileNumber:
        type: string
        description: "Mobile number of the user"

  CollaboratorVO:
    type: object
    properties:
      id:
        type: string
        description: "Short id of the user"
      permission:
        type: string
        description: "Read write admin permissions"
      firstName:
        type: string
        description: "First Name of the user"
      lastName:
        type: string
        description: "Last Name of the user"
      department:
        type: string
        description: "Department of the user"
      email:
        type: string
        description: "E-Mail of the user"
        format: email
      mobileNumber:
        type: string
        description: "Mobile number of the user"

  MatomoPermissionVO:
    type: object
    properties:
      type: string
      enum: [ VIEW,WRITE,ADMIN ]


  GenericMessage:
    type: object
    properties:
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"

  MessageDescription:
    type: object
    properties:
      message:
        type: string
        description: "message"