
spring:
  mvc.pathmatch.matching-strategy: ant_path_matcher
  application:
    name: dna-matomo-service
    version: 1.0.0

  flyway:
    enabled: ${FLYWAY_ENABLED:true}
    baseline-on-migrate: ${FLYWAY_BASELINE_ON_MIGRATE:true}
    baselineVersion: ${FLYWAY_BASELINEVERSION:0}
    schemas: ${FLYWAY_SCHEMA:public}

  jpa:
    database: POSTGRESQL
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false
    hibernate:
      ddl-auto: none

  datasource:
    hikari:
      connection-timeout: 4000
    platform: postgres
    url: ${API_DB_URL:jdbc:postgresql://localhost:5432/dbname}
    username: ${API_DB_USER:username_XXXXX}
    password: ${API_DB_PASS:password_XXXXX}

    driverClassName: org.postgresql.Driver

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

matomo:
  tokenAuth: ${MATOMO_TOKEN_AUTH:XXXXXX}
  uri:
    base: ${MATOMO_BASE_URI:https://web-analytics.***REMOVED***?}
    addSite: ${MATOMO_ADDSITE_URI:module=API&method=SitesManager.addSite&format=JSON&token_auth=}
    getUser: ${MATOMO_GETUSER_URI:module=API&method=UsersManager.getUser&format=JSON&token_auth=}
    addUser: ${MATOMO_ADDUSER_URI:module=API&method=UsersManager.addUser&format=JSON&token_auth=}
    getSite: ${MATOMO_GETSITE_URI:module=API&method=SitesManager.getSiteFromId&format=JSON&token_auth=}
    setUserAccess: ${MATOMO_SETUSERACCESS_URI:module=API&method=UsersManager.setUserAccess&format=JSON&token_auth=}
    deleteSite: ${MATOMO_DELETESITE_URI:module=API&method=SitesManager.deleteSite&format=JSON&token_auth=}
    getUserAccess: ${MATOMO_GETUSERACCESS_URI:module=API&method=UsersManager.getUsersAccessFromSite&format=JSON&token_auth=}
    getSitesAccess: ${MATOMO_GETSITESACCESS_URI:module=API&method=UsersManager.getSitesAccessFromUser&format=JSON&token_auth=}
    updateSite: ${MATOMO_UPDATEDITE_URI:module=API&method=SitesManager.updateSite&format=JSON&token_auth=}


dna:
  uri: ${DNA_URI:XXXXXX}
  dnaAuthEnable: ${DNA_AUTH_ENABLE:false}


jwt:
  secret:
    key: ${JWT_SECRET_KEY:XXXXXX}

server:
  port: 8989

storage.uri : ${STORAGE_API_BASE_URL:XXXXXX}

#Cors Filter origin Domains
allowedCorsOriginPatternUrl: ${CORS_ORIGIN_URL:http://*}

swagger.headers.authorization.token: ${SWAGGER_HEADER_AUTH:XXXXXX}
swagger.headers.authorization.appId: ${SWAGGER_HEADER_AUTH_APPID:XXXXXX}
swagger.headers.authorization.apiKey: ${SWAGGER_HEADER_AUTH_APPKEY:XXXXXX}
management.endpoints.web.exposure.include: loggers,health
management.endpoint.loggers.enabled: true
management.endpoint.health.probes.enabled: true
management.endpoint.health.show-details: always


logging:
  service:
    environment: ${LOGGING_ENVIRONMENT:DEV}
    path: ${LOGGING_PATH:/var/log}
  level:
    com:
      daimler:
        data:
          application: INFO
          controller.ItsmmGameController: DEBUG
    org.springframework.boot.autoconfigure.logging: INFO
    com.daimler.data.application.logging.ApplicationLoggingAspect: DEBUG
    org:
      springframework:
        web:
          client:
            RestTemplate: INFO
      hibernate:
        type:
          descriptor:
            sql: ERROR