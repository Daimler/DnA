# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : fabricWorkspaces.yaml
#  **
#  ** Module     : Tools/FabricWorkspaces
#  **

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  boonbaluri
#
#  Bug Number         :
#  Changed By         :
#  Change Description :
#  Change On          :
#  Search String      :
#
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Fabric workspaces management service"
host: "localhost:9292"
basePath: "/api/1.0"
consumes:
  - "application/json"
produces:
  - "application/json"
tags:
  - name: "solutions"
    description: "This service is used for fabric workspaces maintenance."

schemes:
  - "https"

paths:
  # path to create a new solution and fetch all valid solution or by intent
  #
  #  supprorted http methods GET, POST and DELETE
  #
  # path example ../fabric-workspaces

  /fabric-workspaces:
    get:
      tags:
        - "fabric-workspaces"
      summary: "Get all workspaces for the user."
      description: "Get all workspaces. This endpoints will be used to get all valid available fabric workspace records."
      operationId: "getAll"
      parameters:
#        - name: division
#          in: query
#          description: List of IDs of divisions and subdivisions under each division of workspaces. Example [{1,[2,3]},{2,[1]},{3,[4,5]}]
#          required: false
#          type: string
#         - name: subDivision
#           in: query
#           description: List of IDs of subDivisions of solutions, seperated by comma. Example 1,2,3
#           required: false
#           type: string
#        - name: capacityIds
#          in: query
#          description: Capacity-Id to filter available workspaces. capacityIds is comma seperated keywords which are used to filter and fetch workspaces belonging to given ids. Example "capacityId1, capacityId2"
#          required: false
#          type: string
#        - name: departments
#          in: query
#          description: Capacity-Id to filter available workspaces. capacityIds is comma seperated keywords which are used to filter and fetch workspaces belonging to given ids. Example "department1, department2"
#          required: false
#          type: string
#        - name: tags
#          in: query
#          description: tags to filter available workspaces. tags is comma seperated search keywords which are used to search Tags and ProductName of solutions. Example "workspaces, java"
#          required: false
#          type: string              
        - name: offset
          in: query
          description: page number from which listing of workspaces should start. Offset. Example 2
          required: false
          type: integer
        - name: limit
          in: query
          description: page size to limit the number of workspaces, Example 15
          required: false
          type: integer
        - name: sortBy
          in: query
          description: Sort workspaces by a given variable like name, createdOn
          required: false
          type: string
          enum: [name, createdOn]
        - name: sortOrder
          in: query
          description: Sort solutions based on the given order, example asc,desc
          required: false
          type: string
          enum: [asc,desc]
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/FabricWorkspacesCollectionVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

    post:
      tags:
        - "fabric-workspaces"
      summary: "Adds a new fabric workspace."
      description: "Adds a new non existing workspace."
      operationId: "create"
      parameters:
        - name: "workspaceCreateVO"
          in: "body"
          description: "Request Body that contains data required for creating a new workspace"
          required: true
          schema:
            $ref: "#/definitions/FabricWorkspaceCreateRequestVO"    
      responses:
        201:
          description: "Returns message of succes or failure "
          schema:
            $ref: "#/definitions/FabricWorkspaceResponseVO"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  # Fetch FabricWorkspace by intent
  #
  #  Supported http methods GET
  #
  # path example ../fabric-workspaces
  /fabric-workspaces/{id}:
   get:
      tags:
        - "fabric-workspaces"
      summary: "Get workspace for a given Id."
      description: "Get workspace for a given identifier. This endpoints will be used to get fabric workspace for the given identifier."
      operationId: "getById"
      parameters:
        - name: "id"
          in: "path"
          description: "Fabric Workspace ID to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/FabricWorkspaceVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
   put:
      tags:
        - "fabric-workspaces"
      summary: "Update existing workspace."
      description: "Updates an existing workspace."
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          description: "Fabric Workspace ID to be updated"
          required: true
          type: "string"
        - name: "workspaceUpdateRequestVO"
          in: "body"
          description: "Request Body that contains data required for updating an existing workspace"
          required: true
          schema:
            $ref: "#/definitions/FabricWorkspaceUpdateRequestVO"
      responses:
        200:
          description: "Updated successfully"
          schema:
            $ref: "#/definitions/FabricWorkspaceResponseVO"
        404:
          description: "No workspace found to update"
          schema:
            $ref: "#/definitions/GenericMessage"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/GenericMessage"
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
   delete:
      tags:
        - "fabric-workspaces"
      summary: "Delete workspace for a given Id."
      description: "Delete workspace for a given identifier."
      operationId: "delete"
      parameters:
        - name: "id"
          in: "path"
          description: "Workspace ID to be deleted"
          required: true
          type: "string"
      responses:
        201:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
          

definitions:
  CapacityVO:
    type: object
    properties:
      id:
        type: string
        description: "Identifier for the capacity"
      name:
        type: string
        description: "Name of the Capacity"
      sku:
        type: string
      region:
        type: string
      state:
        type: string
  
  CapacityCollectionVO:
    type: object
    properties:
      capacities: 
        description: "Array of capacities details"
        type: array
        items:
          $ref: "#/definitions/CapacityVO"
          
  FabricWorkspaceVO:
    type: object
    properties:
      id: 
        type: string
        description: "ID for the fabric workspace"
      name:
        type: string
        description: "Name of the fabric workspace"
        maxLength: 256
      typeOfProject:
        type: string
      #  enum: ["Playground","Proof of Concept","Production"]
      description:
        type: string
        maxLength: 4000
      divisionId:
        type: string
      division:
        type: string
      subDivisionId:
        type: string
      subDivision:
        type: string
      department:
        type: string
      tags:
        type: array
        items:
         type: string
      dataClassification:
        type: string
      #  enum: ["Confidential","Internal","Public","Secret"]
      archerId:
        type: string
      procedureId:
        type: string
      termsOfUse:
        type: boolean
      hasPii:
        type: boolean
      costCenter:
        type: string
      internalOrder:
        type: string
      #relatedSolutions:
      #relatedReports:
      capacity:
        $ref: "#/definitions/CapacityVO"
      createdBy:
        $ref: "#/definitions/CreatedByVO"
      createdOn:
        type: string
        format: date
      role:
        type: string
    required:
      - name
      - typeOfProject
      - description
      - divisionId
      - subDivisionId
      - dataClassification
      - hasPii
      - termsOfUse
      - costCenter

  FabricWorkspaceUpdateRequestVO:
    type: object
    properties:
      typeOfProject:
        type: string
      #  enum: ["Playground","Proof of Concept","Production"]
      #description:
      #  type: string
      divisionId:
        type: string
      division:
        type: string
      subDivisionId:
        type: string
      subDivision:
        type: string
      department:
        type: string
      tags:
        type: array
        items:
         type: string
      dataClassification:
        type: string
      #  enum: ["Confidential","Internal","Public","Secret"]
      archerId:
        type: string
      procedureId:
        type: string
      termsOfUse:
        type: boolean
      hasPii:
        type: boolean
      costCenter:
        type: string
      internalOrder:
        type: string
      #relatedSolutions:
      #relatedReports:
      
  FabricWorkspacesCollectionVO:
    description: "Collection of fabric workspaces."
    type: object
    properties:
      totalCount:
        type: integer
        description: "Total Record Count"
      records:
        type: array
        items:
          $ref: "#/definitions/FabricWorkspaceVO"
  
  FabricWorkspaceCreateRequestVO:
    description: "Object to hold request to create new fabric workspace"
    type: object
    properties:
      data:
        $ref: "#/definitions/FabricWorkspaceVO"
  
  FabricWorkspaceResponseVO:
    description: "Response object for fabric workspace operations"
    type: object
    properties:
      data:
        $ref: "#/definitions/FabricWorkspaceVO"
      responses:
        $ref: "#/definitions/GenericMessage"
      

  CreatedByVO:
    type: object
    properties:
      id:
        type: string
        description: "ID of user"
      firstName:
        type: string
        description: "First Name of the user"
      lastName:
        type: string
        description: "Last Name of the user"
      department:
        type: string
        description: "Department of the user"
      email:
        type: string
        description: "E-Mail of the user"
      mobileNumber:
        type: string
        description: "Mobile number of the user"

 
  MessageDescription:
    type: object
    properties:
      message:
        type: string
        description: "message of error or warning"

  GenericMessage:
    type: object
    properties:
      success:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
      warnings:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"
    