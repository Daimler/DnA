apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-backend
  namespace: {{ .Values.namespace }}
  labels:
    name: {{ .Chart.Name }}-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Chart.Name }}-backend
  template:
    metadata:
      labels:
        name: {{ .Chart.Name }}-backend
    spec:
      containers:
        - name: {{ .Chart.Name }}-service
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: MINIO_SECRETKEY
              valueFrom:
                secretKeyRef:
                  key: postgres.app.username
                  name: {{ .Values.secret.name }}
            - name: TRINO_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgres.app.password
                  name: {{ .Values.secret.name }}
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                 key: jwt.secret.key
                 name: {{ .Values.secret.name }} 
            - name: DNA_URI
              value: {{ .Values.dnaAppUrl }}
            - name: DNA_AUTH_ENABLE
              value: {{ .Values.enableAuth | quote}}
            - name: MINIO_BASEURI
              value: {{ .Values.minioBaseurl | quote }}
            - name: MINIO_ACCESSKEY
              value: {{ .Values.minioAccessKey | quote }}
            - name: TRINO_BASEURI
              value: {{ .Values.trinoBaseUrl | quote }}
            - name: TRINO_USER
              value: {{ .Values.trinoUser | quote }}
            - name: TRINO_CATALOG
              value: {{ .Values.trinoCatalog | quote }}
            - name: SWAGGER_HEADER_AUTH
              value: {{ .Values.swaggerHeaderAuth | quote }}
            - name: CORS_ORIGIN_URL
              value: {{ .Values.corsOriginUrl | quote }}
            - name: LOGGING_ENVIRONMENT
              value: {{ .Values.loggingEnvironment | quote }}
            - name: LOGGING_PATH
              value: {{ .Values.loggingPath | quote }}                
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: api
              protocol: TCP
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
            httpGet:
              path: {{ .Values.probes.livenessProbe.path }}
              port: {{ .Values.probes.livenessProbe.port }}
              
          readinessProbe:
            # initialDelaySeconds: 60
            # Max time it will take to success the readiness probe .
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
            httpGet:
              path: {{ .Values.probes.readinessProbe.path }}
              port: {{ .Values.probes.readinessProbe.port }}   
      securityContext:
        runAsUser: 1000
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret.name }}
