version: "3.5"
services:
  app-frontend:
    image: dna/app-frontend
    container_name: app-frontend
    build:
      context: ../packages/frontend/
      dockerfile: ../../deployment/dockerfiles/app/result-frontend.Dockerfile
    environment:
      # - PROJECTSMO_BACKEND_HOST=dna-app-backend
      # - PROJECTSMO_BACKEND_PORT=80
      - PROJECTSMO_FRONTEND_API_BASEURL=http://localhost:7171/api
      - PROJECTSMO_FRONTEND_OIDC_DISABLED=true
      - PROJECTSMO_FRONTEND_OAUTH2_TOKEN_URL=""
      - PROJECTSMO_FRONTEND_OAUTH2_AUTH_URL=""
      - PROJECTSMO_FRONTEND_OAUTH2_REVOKE_URL=""
      - PROJECTSMO_FRONTEND_OAUTH2_LOGOUT_URL=""
      - PROJECTSMO_FRONTEND_OAUTH2_INTROSPECTION_URL=""
      - PROJECTSMO_FRONTEND_OAUTH2_USERINFO_URL=""
      - PROJECTSMO_FRONTEND_CLIENT_IDS=""
      - PROJECTSMO_FRONTEND_REDIRECT_URLS=""
      - PROJECTSMO_ENABLE_INTERNAL_USER_INFO=false
      - PROJECTSMO_ENABLE_DATA_COMPLIANCE=false
      - PROJECTSMO_ENABLE_REPORTS=false
      - PROJECTSMO_ENABLE_JUPYTER_WORKSPACE=false
      - PROJECTSMO_JUPYTER_NOTEBOOK_URL=""
      - PROJECTSMO_JUPYTER_NOTEBOOK_OIDC_POPUP_URL=""
      - PROJECTSMO_JUPYTER_NOTEBOOK_OIDC_POPUP_WAIT_TIME=5000
      - PROJECTSMO_ENABLE_DATAIKU_WORKSPACE=false
      - PROJECTSMO_DATAIKU_LIVE_APP_URL=""
      - PROJECTSMO_DATAIKU_TRAINING_APP_URL=""
      - PROJECTSMO_DATAIKU_FERRET_URL=""
      - PROJECTSMO_ENABLE_MALWARE_SCAN_SERVICE=false
      - PROJECTSMO_ENABLE_MALWARE_SCAN_ONEAPI_INFO=false
      - PROJECTSMO_MALWARE_SCAN_SWAGGER_UI_URL=""
      - PROJECTSMO_ENABLE_DATA_PIPELINE_SERVICE=false
      - PROJECTSMO_ENABLE_ML_PIPELINE_SERVICE=false
      - PROJECTSMO_ML_PIPELINE_URL=""
      - PROJECTSMO_ENABLE_STORAGE_SERVICE=false
      - PROJECTSMO_STORAGE_MFE_APP_URL=http://localhost:8083
      - PROJECTSMO_DNA_COMPANY_NAME=Company_Name
      - PROJECTSMO_DEPLOY_VERSION=0.91
      - PROJECTSMO_DNA_APPNAME_HEADER=DnA App
      - PROJECTSMO_DNA_APPNAME_HOME=Data and Analytics
      - PROJECTSMO_DNA_CONTACTUS_HTML=<div><p>There could be many places where you may need our help, and we are happy to support you. <br /> Please add your communication channels links here</p></div>
      - PROJECTSMO_DNA_BRAND_LOGO_URL=/images/branding/logo-brand.png
      - PROJECTSMO_DNA_APP_LOGO_URL=/images/branding/logo-app-white.png
      - PROJECTSMO_ENABLE_NOTIFICATION=true
    ports:
      - "8080:3000"

  app-db:
    image: bitnami/postgresql:11.14.0-debian-10-r28
    container_name: app-db
    restart: on-failure
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
      - "POSTGRES_DB=db"
    volumes:
      - ./kubernetes/helm/charts/bitnami-postgresql/files/docker-entrypoint-initdb.d/01-update-script.sql:/docker-entrypoint-initdb.d/01-updatescript.sql
      - ./kubernetes/helm/charts/bitnami-postgresql/files/docker-entrypoint-initdb.d/02-schema-creation.sql:/docker-entrypoint-initdb.d/02-schema-creation.sql
      - ./kubernetes/helm/charts/bitnami-postgresql/files/docker-entrypoint-initdb.d/03-schema-data.sql:/docker-entrypoint-initdb.d/02-schema-data.sql
    ports:
      - "5432:5432"

  app-backend:
    image: dna/app-backend
    container_name: app-backend
    build:
      context: ../packages/backend/
      dockerfile: ../../deployment/dockerfiles/app/result-backend.Dockerfile
    environment:
      - API_DB_URL=jdbc:postgresql://app-db:5432/db
      - API_DB_USER=postgres
      - API_DB_PASS=postgres
      - OIDC_DISABLED=true
      # - OIDC_CLIENT_SECRET=""
      # - OIDC_CLIENT_ID=""
      # - OIDC_USER_INFO_URL=""
      # - OIDC_TOKEN_INTROSPECTION_URL=""
      # - OIDC_TOKEN_REVOCATION_URL=""
      # - OIDC_PROVIDER=INTERNAL
      # - REDIRECT_URL=""
      # - JWT_SECRET_KEY=""
      # - INTERNAL_USER_REQUEST_URL=""
      # - INTERNAL_USER_CERT_PASS=""
      # - INTERNAL_USER_CERT_FILE=""
      - INACTIVE_SOLUTION_DURATION_YRS=2
      - JUPYTER_NOTEBOOK=false
      # - JUPYTER_NOTEBOOK_BASEURI=""
      # - JUPYTER_NOTEBOOK_TOKEN=""
      - DATAIKU=false
      # - DATAIKU_PROD_URI=""
      # - DATAIKU_PROD_API_KEY=""
      # - DATAIKU_PROD_ADMIN_GROUP=""
      # - DATAIKU_TRAINING_URI=""
      # - DATAIKU_TRAINING_API_KEY=""
      # - DATAIKU_TRAINING_ADMIN_GROUP=""
      # - DATAIKU_PROJECTS_URI_PATH=""
      - ITSMM=false
      - ATTACHMENT_MALWARE_SCAN=false
      # - AVSCAN_URI=""
      # - AVSCAN_APP_ID=""
      # - AVSCAN_API_KEY=""
      - DRD_INTERNAL_USER_ENABLED=false
      # - S3_EP_URL=
      # - S3_BUCKET_NAME=
      # - S3_ACCESS_KEY=
      # - S3_SECRET_KEY=
      # - S3_MAX_PARALLEL_UPLOADTHREADS=20
      # - S3_MIN_FILESIZE=1024
      # - S3_MAX_FILESIZE=5242880
      # - CORS_ORIGIN_URL=""
      - VAULT_HOST=localhost
      - VAULT_PORT=8200
      - VAULT_SCHEME=http
      - VAULT_AUTHENTICATION=TOKEN
      - VAULT_TOKEN=***REMOVED***
      - VAULT_MOUNTPATH=kv
      - NAAS_BROKER=broker:29092
      - LOGGING_ENVIRONMENT=DEV
      - LOGGING_PATH=/tmp/app/logs/
      - JWT_TOKEN_EXPIRY_TIME_IN_MIN=90
    depends_on:
      - app-db
      - app-frontend
    ports:
      - "7171:7171"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 30s

  dashboard-backend:
    image: dna/dashboard-backend
    container_name: dashboard-backend
    build:
      context: ../packages/dashboard-backend/
      dockerfile: ../../deployment/dockerfiles/dashboard/dashboard-backend.Dockerfile
    environment:
      - API_DB_URL=jdbc:postgresql://app-db:5432/dashboard
      - API_DB_USER=dashboard
      - API_DB_PASS=dashboard
      - DNA_URI=http://localhost:7171
      - DNA_AUTH_ENABLE=false
      - LOGGING_ENVIRONMENT=DEV
      - LOGGING_PATH=/tmp/dashboard/logs/
    depends_on:
      - app-db
    ports:
      - "7173:7173"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 30s

  malware-backend:
    image: dna/malware-backend
    container_name: malware-backend
    build:
      context: ../packages/malware-scanner/
      dockerfile: ../../deployment/dockerfiles/clamav/clamav-service.Dockerfile
    environment:
      - CLAMAV_BACKEND_URL=clamav
      - CLAMAV_BACKEND_PORT=3310
      - MAX_FILE_SIZE=3000MB
      - MAX_REQUEST_SIZE=3000MB
      - API_REQUEST_LIMIT=20
      - WITH_IN=2
      - RESTRICTED_URL_PATTERN=.*
      - AUTH_API_HOST=http://localhost:7171/api/subscription/validate
      - TIME_UNIT=seconds
      - LOGGING_ENVIRONMENT=DEV
      - LOGGING_PATH=/tmp/clamav/log
    depends_on:
      - clamav    
    ports:
      - 7174:8181
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 30s

  clamav:
    image: mkodockx/docker-clamav
    container_name: clamav
    volumes:
      - ./dockerfiles/clamav/clamd.conf:/etc/clamav/clamd.conf
    ports:
      - 3310:3310

  naas-backend:
    image: dna/naas-backend
    container_name: naas-backend
    build:
      context: ../packages/naas/
      dockerfile: ../../deployment/dockerfiles/naas/naas-backend.Dockerfile
    environment:
      - API_DB_URL=jdbc:postgresql://app-db:5432/db
      - API_DB_USER=postgres
      - API_DB_PASS=postgres
      - DNA_URI=http://app-backend:7171
      - DNA_AUTH_ENABLE=false
      - DNA_AUTH_API_TOKEN=
      - JWT_SECRET_KEY=
      - DNA_USER_NOTIFICATION_PREF_GET_URI=/api/notification-preferences
      - NAAS_BROKER=broker:29092
      - NAAS_CENTRAL_TOPIC=dnaCentralEventTopic
      - NAAS_CENTRALREAD_TOPIC=dnaCentralReadTopic
      - NAAS_CENTRALDELTE_TOPIC=dnaCentralDeleteTopic
      - MAX_POLL_RECORDS=5000
      - POLL_TIME=5000
      - LOGGING_ENVIRONMENT=DEV
      - LOGGING_PATH=/tmp/naas/logs/
      - DNA_MAIL_SERVER_PORT=25
      - DNA_MAIL_SERVER_HOST=
    depends_on:
      - app-backend
      - broker
    ports:
      - 7272:7272
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 30s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1